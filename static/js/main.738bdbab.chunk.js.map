{"version":3,"sources":["services/networking/NetworkingServiceImpl.ts","services/networking/baseURLs.ts","services/api/APIError.ts","services/networking/buildEndpointURL.ts","dependencies/Dependencies.ts","screens/VideoPlayer/ViewState.ts","services/api/VideoPlayerService/VideosServiceImpl.ts","presenter/Presenter.ts","services/api/models/Video.ts","components/Buttons/ButtonWithIcon.tsx","localization/local.ts","components/AppSnackBar/AppSnackBar.tsx","components/AppSnackBar/AppAlert.tsx","components/AppSnackBar/AppSnackBarStyles.ts","screens/VideoPlayer/VideoPlayerPresenter.ts","screens/SackBar/SnackBarPresenter.ts","presenter/Presenters.ts","presenter/usePresenter.ts","components/AppBar/SearchAppBarStyles.ts","components/Buttons/MenuButton.tsx","components/AppTitle.tsx","components/SearchInput/SearchInputStyles.ts","components/SearchInput/SearchInput.tsx","components/AppBar/SearchAppBar.tsx","components/VideoPlayer/VideoPlayer.tsx","components/AppContent.tsx","components/VideoPlayer/VideoLoading.tsx","components/AppGrid/AppGridStyles.ts","components/AppGrid/AppGrid.tsx","components/VideoFooter.tsx","screens/VideoPlayer/VideoPlayerScreen.tsx","screens/SackBar/SnackBarComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx","services/networking/NetworkingServiceConfiguration.ts"],"names":["AjaxMethod","GoogleApisBaseUrl","makeError","e","status","errorMessages","xhr","response","error","errors","NetworkingServiceImpl","ajaxCreationMethod","configuration","timeout","TIMEOUT_IN_MS","sendRequest","request","pipe","catchError","console","log","throwError","this","baseURL","endpoint","headers","getRequest","map","url","params","buildEndpointURL","buildRequest","GET","method","body","ViewState","networkServiceConfiguration","DevNetworkingServiceConfiguration","dependencies","videosGateway","networkingService","searchVideos","query","youtubeKey","getYoutubeDataAPIKey","getJSON","mapVideosDataToVideos","videosJSON","items","videoId","id","snippet","title","description","channel","name","channelTitle","ajax","Presenter","updateHandler","output","Error","NullVideo","ButtonIconType","local","AlertState","useStyles","makeStyles","theme","button","margin","spacing","ButtonWithIcon","props","classes","buttonType","PlayIcon","getIcon","PauseIcon","mapButtonTypeToConfig","Button","disabled","variant","color","className","startIcon","onClick","AppAlert","elevation","root","width","marginTop","mapAlertStateToColor","state","Info","Warning","AppSnackBar","Snackbar","open","isOpen","autoHideDuration","onClose","onClosePress","severity","message","VideoPlayerInitialOutput","videos","selectedVideo","searchString","isPlaying","viewState","Empty","VideoPlayerPresenter","videosService","isQuotaExceededError","getInitialOutput","showSnackBar","showSnackBarHandler","showSnackBarAlertBasedOnViewState","updateOutput","onPlayOrPauseClick","toggleButtonIconType","Loading","debounceTime","subscribe","getVideoSuccess","processError","isEmpty","length","Data","processErrorViewState","errorMessage","reason","isPlay","Success","update","SnackBarInitialOutput","alertState","SnackBarPresenter","show","hide","presenters","videoPlayerPresenter","snackBarPresenter","usePresenter","presenter","initialState","useState","setState","setUpdateHandler","grow","flexGrow","menuButton","marginRight","display","breakpoints","up","MenuButton","IconButton","edge","aria-label","AppTitle","Typography","noWrap","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","SearchInput","InputBase","value","placeholder","input","inputProps","onChange","event","onSearch","target","SearchAppBar","AppBar","Container","maxWidth","Toolbar","videoSize","VideoPlayer","playing","controls","onReady","player","onVideoReady","config","youtube","playerVars","showinfo","overflow","AppContent","children","VideoLoading","Skeleton","animation","paper","AppGrid","Paper","Grid","container","wrap","item","xs","zeroMinWidth","VideoFooter","showTextOrSkeleton","content","isLoading","paragraph","isButtonDisabled","onButtonClick","component","VideoPlayerScreen","useEffect","str","SnackBarComponent","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","process"],"mappings":"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","file":"static/js/main.738bdbab.chunk.js","sourcesContent":["import {NetworkingService, Headers} from \"./NetworkingService\";\nimport {Observable, throwError} from \"rxjs\";\nimport {AjaxResponse} from \"rxjs/ajax\";\nimport {AjaxCreationMethod} from \"rxjs/internal-compatibility\";\nimport {NetworkingServiceConfiguration} from \"./NetworkingServiceConfiguration\";\nimport {buildEndpointURL} from \"./buildEndpointURL\";\nimport {catchError, map} from \"rxjs/operators\";\nimport {makeError} from \"../api/APIError\";\nimport {GoogleApisBaseUrl} from \"./baseURLs\";\n\nenum AjaxMethod {\n    GET = 'GET',\n    //POST = 'POST',\n    //PUT = 'PUT',\n}\n\n// TODO: Unit test.\nexport class NetworkingServiceImpl implements NetworkingService {\n    public static TIMEOUT_IN_MS: number = 30000;\n\n    constructor(\n        private readonly ajaxCreationMethod: AjaxCreationMethod,\n        private readonly configuration: NetworkingServiceConfiguration,\n        private readonly timeout: number = NetworkingServiceImpl.TIMEOUT_IN_MS,\n    ) {\n        this.configuration.baseURL = GoogleApisBaseUrl;\n    }\n\n    get(endpoint: string, headers?: Headers): Observable<AjaxResponse> {\n        const request = this.getRequest(endpoint, headers);\n\n        return this.sendRequest(request);\n    }\n\n    getJSON<T>(endpoint: string, headers?: Headers): Observable<T> {\n        const request = this.getRequest(endpoint, headers);\n\n        return this.sendRequest(request).pipe(map(response => response.response));\n    }\n\n    private getRequest(endpoint: string, headers?: Headers) {\n        const url = buildEndpointURL(this.configuration.baseURL, endpoint);\n\n        return this.buildRequest(url, AjaxMethod.GET, headers);\n    }\n\n    private buildRequest(\n        url: string,\n        method: AjaxMethod,\n        headers?: Headers,\n        body?: any,\n    ): Observable<AjaxResponse> {\n        return this.ajaxCreationMethod({\n            url,\n            method,\n            body,\n            headers,\n            timeout: this.timeout,\n        });\n    }\n\n    private sendRequest = (request: Observable<AjaxResponse>): Observable<AjaxResponse> => {\n        return request.pipe(\n            catchError(error => {\n                console.log(`sendRequest`, error);\n\n                return throwError(makeError(error));\n            }),\n        );\n    };\n}\n","export const YoutubeBaseURL = 'https://www.youtube.com';\n\nexport const GoogleApisBaseUrl = 'https://www.googleapis.com/';\n","import {AjaxError} from \"rxjs/ajax\";\n\nexport const QuotaExceededErrorReason = 'quotaExceeded'\n\ntype DefaultParamsType = Record<string, any>;\n\nexport interface ErrorMessage<T extends DefaultParamsType = DefaultParamsType> {\n    domain: string;\n    message: string;\n    reason: string;\n    parameters: T;\n}\n\nexport interface APIError<T extends Record<string, any> = Record<string, any>> {\n    status: number;\n    errorMessages: ErrorMessage<T>[];\n}\n\nexport const makeError = (e: AjaxError): APIError => {\n    return {\n        status: e.status,\n        errorMessages: e.xhr.response && e.xhr.response?.error?.errors,\n    };\n};\n","import {YoutubeBaseURL} from \"./baseURLs\";\n\nexport const buildYoutubeVideoURL = (videoId: string): string => {\n    return `${YoutubeBaseURL}/watch?v=${videoId}`;\n}\n\nexport const buildEndpointURL = (\n    baseURL: string | undefined,\n    endpoint: string,\n    params?: string,\n): string => {\n    return baseURL + 'youtube/' + endpoint + (params || '');\n}\n","import { ajax } from 'rxjs/ajax';\nimport {VideosGateway} from \"../services/api/VideoPlayerService/VideosGateway\";\nimport {VideosServiceImpl} from \"../services/api/VideoPlayerService/VideosServiceImpl\";\nimport {NetworkingServiceImpl} from \"../services/networking/NetworkingServiceImpl\";\nimport {DevNetworkingServiceConfiguration} from \"../services/networking/NetworkingServiceConfiguration\";\n\nexport interface Dependencies {\n    videosGateway: VideosGateway;\n}\n\nconst networkServiceConfiguration = new DevNetworkingServiceConfiguration();\n\nconst networkingService = new NetworkingServiceImpl(\n    ajax,\n    networkServiceConfiguration,\n);\n\nexport const dependencies: Dependencies = {\n    videosGateway: new VideosServiceImpl(networkingService),\n}\n","export enum ViewState {\n    Loading = 'Loading',\n    Empty = 'Empty',\n    Data = 'Data',\n    Error = 'Error',\n}\n","import {VideosGateway} from \"./VideosGateway\";\nimport {NetworkingService} from \"../../networking/NetworkingService\";\nimport {Observable} from \"rxjs\";\nimport {Video} from \"../models/Video\";\nimport {map} from \"rxjs/operators\";\nimport {VideosSearchDataJSON} from \"../models/VideosListJSON\";\nimport {getYoutubeDataAPIKey} from \"../../networking/NetworkingServiceConfiguration\";\n\nexport class VideosServiceImpl implements VideosGateway {\n    constructor(private readonly networkingService: NetworkingService) {\n    }\n\n    searchVideos = (query: string): Observable<Video[]> => {\n        const youtubeKey = getYoutubeDataAPIKey();\n        const endpoint = `v3/search?key=${youtubeKey}&type=video&part=snippet&maxResults=1&q=${query}`;\n        return this.networkingService.getJSON<VideosSearchDataJSON>(endpoint).pipe(\n            map(this.mapVideosDataToVideos),\n        );\n    }\n\n    private mapVideosDataToVideos = (videosJSON: VideosSearchDataJSON): Video[] => {\n        return videosJSON.items.map(({ id : { videoId }, snippet }) => ({\n            id: videoId,\n            title: snippet.title,\n            description: snippet.description,\n            channel: {\n                name: snippet.channelTitle,\n            },\n        }));\n    };\n}\n","type UpdateHandler<Output> = (output: Output) => void;\n\nexport abstract class Presenter<Output> {\n    private updateHandler?: UpdateHandler<Output>;\n\n    abstract getInitialOutput(): Output;\n\n    setUpdateHandler(updateHandler: UpdateHandler<Output>): void {\n        this.updateHandler = updateHandler;\n    }\n\n    protected update(output: Output): void {\n        if (this.updateHandler) {\n            this.updateHandler(output);\n        } else {\n            throw new Error('Presenter: you must set updateHandler before calling update: ' + this);\n        }\n    }\n}\n","export interface Video {\n    id: string;\n    title: string;\n    description: string;\n    channel: {\n        name: string;\n    };\n}\n\nexport const NullVideo: Video = {\n    id: '',\n    title: '',\n    description: '',\n    channel: {\n        name: '',\n    },\n};\n","import React, {FC, ReactNode} from \"react\";\nimport {Button} from \"@material-ui/core\";\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineIcon from '@material-ui/icons/PauseCircleOutline';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {local} from \"../../localization/local\";\n\nexport enum ButtonIconType {\n    PauseIcon = 'PauseIcon',\n    PlayIcon = 'PlayIcon',\n}\n\ninterface ButtonConfig {\n    title: string;\n    getIcon: () => ReactNode,\n}\n\nconst mapButtonTypeToConfig = (buttonType: ButtonIconType): ButtonConfig => {\n    switch (buttonType) {\n        case ButtonIconType.PlayIcon:\n            return {\n                title: local.play,\n                getIcon: () => <PlayCircleOutlineIcon/>,\n            };\n        case ButtonIconType.PauseIcon:\n            return {\n                title: local.pause,\n                getIcon: () => <PauseCircleOutlineIcon />,\n            }\n    }\n};\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\ninterface Props {\n    disabled: boolean;\n    buttonType: ButtonIconType;\n    onClick?: () => void;\n}\n\nexport const ButtonWithIcon: FC<Props> = props => {\n    const classes = useStyles();\n\n    const { title, getIcon } = mapButtonTypeToConfig(props.buttonType);\n\n    const handleOnClick = () => props.onClick?.();\n\n    return (\n        <div>\n            <Button\n                disabled={props.disabled}\n                variant=\"contained\"\n                color=\"secondary\"\n                className={classes.button}\n                startIcon={getIcon()}\n                onClick={handleOnClick}\n            >{title}</Button>\n        </div>\n    )\n};\n","export const local = {\n    // General\n    appTitle: 'YouTV',\n    search: 'Search',\n    searchPlaceholder: 'Search...',\n    searchForVideos: 'Welcome! You can search Youtube videos just from here!',\n\n    // Button\n    play: 'Play',\n    pause: 'Pause',\n\n    // SnackBar\n    successMessage: 'Video is found!',\n    emptyMessage: 'No video found!',\n    loadingMessage: 'Welcome to You TV',\n    errorMessage: 'Ooops! something is wrong, try again!',\n    youtubeAPIError: 'No chance to use API, reached the maximum number of search by quota!',\n}\n","import React, {FC} from \"react\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {AppAlert} from \"./AppAlert\";\nimport {Color} from \"@material-ui/lab/Alert/Alert\";\nimport {useStyles} from \"./AppSnackBarStyles\";\n\nconst SnackBareTimeOut = 5000;\n\nexport enum AlertState {\n    Error = 'Error',\n    Warning = 'Warning',\n    Info = 'Info',\n    Success = 'Success',\n}\n\ninterface Props {\n    isOpen: boolean;\n    state: AlertState;\n    message: string;\n    onClosePress: () => void;\n}\n\nconst mapAlertStateToColor = (state: string): Color => {\n    switch (state) {\n        case AlertState.Error:\n            return 'error';\n        case AlertState.Info:\n            return 'info';\n        case AlertState.Warning:\n            return 'warning';\n    }\n    return 'success';\n};\n\nexport const AppSnackBar: FC<Props> = props => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Snackbar open={props.isOpen} autoHideDuration={SnackBareTimeOut} onClose={props.onClosePress}>\n                <AppAlert\n                    severity={mapAlertStateToColor(props.state)}\n                    onClose={props.onClosePress}\n                >{props.message}</AppAlert>\n            </Snackbar>\n        </div>\n    );\n}\n","import React, {FC} from \"react\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport {AlertProps} from \"@material-ui/lab/Alert/Alert\";\n\n\nexport const AppAlert: FC<AlertProps> = props => (\n    <MuiAlert elevation={6} variant=\"filled\" {...props} />\n);\n","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n        '& > * + *': {\n            marginTop: theme.spacing(2),\n        },\n    },\n}));\n","import {debounceTime} from \"rxjs/operators\";\nimport {Presenter} from \"../../presenter/Presenter\";\nimport {VideosGateway} from \"../../services/api/VideoPlayerService/VideosGateway\";\nimport {NullVideo, Video} from \"../../services/api/models/Video\";\nimport {ViewState} from \"./ViewState\";\nimport {ButtonIconType} from \"../../components/Buttons/ButtonWithIcon\";\nimport {APIError, QuotaExceededErrorReason} from \"../../services/api/APIError\";\nimport {AlertState} from \"../../components/AppSnackBar/AppSnackBar\";\nimport {local} from \"../../localization/local\";\n\ntype ShowSnackBarHandler = (message: string, state: AlertState) => void\n\nexport interface VideoPlayerOutput {\n    videos: Video[];\n    selectedVideo: Video;\n    searchString: string;\n    isPlaying: boolean;\n    viewState: ViewState;\n    buttonType: ButtonIconType;\n}\n\nconst VideoPlayerInitialOutput: VideoPlayerOutput = {\n    videos: [],\n    selectedVideo: NullVideo,\n    searchString: '',\n    isPlaying: false,\n    viewState: ViewState.Empty,\n    buttonType: ButtonIconType.PlayIcon,\n}\n\n// TODO: Add Unit test.\nexport class VideoPlayerPresenter extends Presenter<VideoPlayerOutput> {\n    private searchString: string = '';\n    private buttonType: ButtonIconType = ButtonIconType.PlayIcon;\n    private viewState: ViewState = ViewState.Empty;\n    private videos: Video[] = [];\n    private selectedVideo: Video = NullVideo;\n    private isPlaying: boolean = false;\n\n    private isQuotaExceededError: boolean = false;\n\n    constructor(private readonly videosService: VideosGateway) {\n        super();\n    }\n\n    getInitialOutput = (): VideoPlayerOutput => {\n        return VideoPlayerInitialOutput;\n    }\n\n    showSnackBar = (showSnackBarHandler: ShowSnackBarHandler) => {\n        this.showSnackBarAlertBasedOnViewState(showSnackBarHandler);\n\n        this.updateOutput();\n    };\n\n    onPlayOrPauseClick = () => {\n        this.isPlaying = !this.isPlaying;\n        this.toggleButtonIconType();\n\n        this.updateOutput();\n    }\n\n    searchVideos = (searchString: string) => {\n        this.viewState = ViewState.Loading;\n        this.searchString = searchString;\n\n        this.updateOutput();\n\n        this.videosService\n            .searchVideos(searchString)\n            .pipe(debounceTime(1000))\n            .subscribe(this.getVideoSuccess, this.processError);\n    }\n\n    private getVideoSuccess = (videos: Video[]) => {\n        const isEmpty = videos.length === 0;\n        this.viewState = isEmpty ? ViewState.Empty : ViewState.Data;\n\n        this.selectedVideo = videos[0];\n        this.videos = videos;\n\n        this.updateOutput();\n    };\n\n    private processError = (error: APIError) => {\n        this.processErrorViewState(error)\n\n        this.selectedVideo = NullVideo;\n        this.videos = [];\n\n        this.updateOutput();\n    }\n\n    private processErrorViewState = (error: APIError) => {\n        const errorMessage = error?.errorMessages[0];\n\n        if (errorMessage?.reason === QuotaExceededErrorReason) {\n            this.isQuotaExceededError = true;\n            this.viewState = ViewState.Loading;\n        } else {\n            this.isQuotaExceededError = false;\n            this.viewState = ViewState.Error;\n        }\n    }\n\n    private toggleButtonIconType = () => {\n        const isPlay = this.buttonType === ButtonIconType.PlayIcon;\n        this.buttonType = isPlay ? ButtonIconType.PauseIcon : ButtonIconType.PlayIcon;\n    }\n\n    private showSnackBarAlertBasedOnViewState = (showSnackBarHandler: ShowSnackBarHandler) => {\n        let message = '';\n        let state = AlertState.Info;\n\n        switch (this.viewState) {\n            case ViewState.Data:\n                message = local.successMessage;\n                state = AlertState.Success;\n                break;\n            case ViewState.Empty:\n                message = local.emptyMessage;\n                state = AlertState.Info;\n                break;\n            case ViewState.Loading:\n                message = local.loadingMessage;\n                state = AlertState.Info;\n                break;\n            case ViewState.Error:\n                message = this.isQuotaExceededError ? local.youtubeAPIError : local.errorMessage;\n                state = AlertState.Error;\n                break;\n        }\n\n        showSnackBarHandler(message, state);\n    }\n\n    private updateOutput = () => {\n        this.update({\n            searchString: this.searchString,\n            buttonType: this.buttonType,\n            videos: this.videos,\n            selectedVideo: this.selectedVideo,\n            isPlaying: this.isPlaying,\n            viewState: this.viewState,\n        })\n    }\n}\n","import {Presenter} from \"../../presenter/Presenter\";\nimport {AlertState} from \"../../components/AppSnackBar/AppSnackBar\";\n\nexport interface SnackBarOutput {\n    isOpen: boolean;\n    alertState: AlertState;\n    message: string;\n}\n\nexport const SnackBarInitialOutput: SnackBarOutput = {\n    isOpen: false,\n    alertState: AlertState.Info,\n    message: '',\n}\n\n// TODO: Unit test.\nexport class SnackBarPresenter extends Presenter<SnackBarOutput> {\n    private isOpen: boolean = false;\n    private message: string = '';\n    private alertState: AlertState = AlertState.Info;\n\n    getInitialOutput(): SnackBarOutput {\n        return SnackBarInitialOutput;\n    }\n\n    show = (message: string, state: AlertState) => {\n        this.alertState = state;\n        this.message = message;\n\n        this.isOpen = true;\n\n        this.updateOutput();\n    }\n\n    hide = () => {\n        this.isOpen = false;\n        this.message = '';\n        this.alertState = AlertState.Info;\n\n        this.updateOutput();\n    }\n\n    private updateOutput = () => {\n        this.update({\n            message: this.message,\n            isOpen: this.isOpen,\n            alertState: this.alertState,\n        })\n    }\n}\n","import {dependencies} from \"../dependencies/Dependencies\";\nimport {VideoPlayerPresenter} from \"../screens/VideoPlayer/VideoPlayerPresenter\";\nimport {SnackBarPresenter} from \"../screens/SackBar/SnackBarPresenter\";\n\ninterface Presenters {\n    videoPlayerPresenter: VideoPlayerPresenter;\n    snackBarPresenter: SnackBarPresenter;\n}\n\nexport const presenters: Presenters = {\n    videoPlayerPresenter: new VideoPlayerPresenter(dependencies.videosGateway),\n    snackBarPresenter: new SnackBarPresenter(),\n}\n","import { useState } from 'react';\nimport { Presenter } from './Presenter';\n\nexport const usePresenter = <T>(presenter: Presenter<T>) => {\n    const initialState = presenter.getInitialOutput();\n\n    const [state, setState] = useState<T>(initialState);\n\n    presenter.setUpdateHandler(setState);\n\n    return state;\n}\n","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n}));\n","import MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport React, {FC} from \"react\";\n\ninterface Props {\n    className: string;\n}\n\nexport const MenuButton: FC<Props> = ({className}) => {\n    return (\n        <IconButton\n            edge=\"start\"\n            className={className}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n        >\n            <MenuIcon />\n        </IconButton>\n    )\n}\n","import React, {FC} from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\ninterface Props {\n    title: string,\n    className: string,\n}\n\nexport const AppTitle: FC<Props> = ({ title, className  }) => (\n    <Typography className={className} variant={'h6'} noWrap>{title}</Typography>\n)\n","import {fade, makeStyles} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    },\n}));\n","import React, {FC} from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport {useStyles} from \"./SearchInputStyles\";\nimport {local} from \"../../localization/local\";\n\ninterface Props {\n    value: string\n    placeholder: string;\n    onSearch: (str: string) => void;\n}\n\nexport const SearchInput: FC<Props> = props => {\n    const classes = useStyles();\n\n    const handleOnChange = (event: {target : { value: string }}) => {\n        props.onSearch(event.target.value);\n    }\n\n    return (\n        <div className={classes.search}>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                value={props.value}\n                placeholder={local.searchPlaceholder}\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': local.search }}\n                onChange={handleOnChange}\n            />\n        </div>\n    );\n};\n","import React, {FC} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {useStyles} from \"./SearchAppBarStyles\";\nimport {MenuButton} from \"../Buttons/MenuButton\";\nimport {AppTitle} from \"../AppTitle\";\nimport {local} from \"../../localization/local\";\nimport {SearchInput} from \"../SearchInput/SearchInput\";\nimport {Container} from \"@material-ui/core\";\n\ninterface Props {\n    title: string;\n    search: string;\n    onSearch: (str: string) => void;\n}\n\nexport const SearchAppBar: FC<Props> = props => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.grow}>\n            <AppBar position={'static'}>\n                <Container maxWidth={'md'}>\n                    <Toolbar>\n                        <MenuButton className={classes.menuButton} />\n                        <SearchInput\n                            placeholder={local.searchPlaceholder}\n                            value={props.search}\n                            onSearch={props.onSearch}\n                        />\n                        <div className={classes.grow} />\n                        <AppTitle title={props.title} className={classes.title} />\n                    </Toolbar>\n                </Container>\n            </AppBar>\n        </div>\n    );\n}\n","import React, {FC} from \"react\";\nimport Player from \"react-player\";\nimport ReactPlayer from \"react-player\";\nimport {buildYoutubeVideoURL} from \"../../services/networking/buildEndpointURL\";\n\nimport './VideoPlayerStyles.css';\n\nexport const videoSize = {\n    width: '100%',\n    height: '100%',\n}\n\ninterface Props {\n    videoId: string;\n    isPlaying: boolean;\n    onVideoReady?: (player: ReactPlayer) => void;\n}\n\nexport const VideoPlayer: FC<Props> = props => {\n    const url = buildYoutubeVideoURL(props.videoId);\n\n    const onVideoReady = (player: ReactPlayer) => {\n        props.onVideoReady?.(player);\n    }\n\n    return (\n        <div className={'player-wrapper'}>\n            <Player\n                className={'player'}\n                url={url}\n                playing={props.isPlaying}\n                controls={true}\n                width={videoSize.width}\n                height={videoSize.height}\n                onReady={onVideoReady}\n                config={{\n                    youtube: {\n                        playerVars: { showinfo: 1 }\n                    },\n                }}\n            />\n        </div>\n    );\n}\n","import React, {FC, ReactNode} from \"react\";\nimport {Container} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        overflow: 'hidden',\n        padding: theme.spacing(0, 3),\n    },\n}));\n\ninterface Props {\n    children: ReactNode;\n}\n\nexport const AppContent: FC<Props> = props => {\n    const classes = useStyles();\n\n    return (\n        <Container maxWidth={'lg'}>\n            <div className={classes.root}>\n                {props.children}\n            </div>\n        </Container>\n    );\n};\n","import React, {FC} from \"react\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {videoSize} from \"./VideoPlayer\";\n\nimport './VideoPlayerStyles.css';\n\nexport const VideoLoading: FC = () => (\n    <div className={'player-wrapper '}>\n        <Skeleton animation={'wave'} variant={'rect'} width={videoSize.width} height={videoSize.height} />\n        {/*<ProgressIndicator />*/}\n    </div>\n)\n","import {makeStyles} from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        overflow: 'hidden',\n        padding: theme.spacing(0, 3),\n    },\n    paper: {\n        maxWidth: '80%',\n        margin: `${theme.spacing(1)}px auto`,\n        padding: theme.spacing(2),\n    },\n}));\n","import React, {FC, ReactNode} from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {useStyles} from \"./AppGridStyles\";\n\ninterface Props {\n    children: ReactNode;\n}\n\nexport const AppGrid: FC<Props> = props => {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper}>\n            <Grid container wrap=\"nowrap\" spacing={2}>\n                <Grid item xs zeroMinWidth>\n                    {props.children}\n                </Grid>\n            </Grid>\n        </Paper>\n    );\n};\n","import React, {FC} from \"react\";\nimport {AppGrid} from \"./AppGrid/AppGrid\";\nimport {ButtonIconType, ButtonWithIcon} from \"./Buttons/ButtonWithIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Video} from \"../services/api/models/Video\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport {local} from \"../localization/local\";\n\ninterface Props {\n    isLoading: boolean;\n    isEmpty: boolean;\n    isButtonDisabled: boolean;\n    buttonType: ButtonIconType;\n    onButtonClick: () => void;\n    selectedVideo: Video;\n}\n\nexport const VideoFooter: FC<Props> = props => {\n    const showTextOrSkeleton = (content: string) => {\n        return props.isLoading ? <Skeleton animation={'wave'} /> : content;\n    }\n\n    if (props.isEmpty) {\n        return (\n            <AppGrid>\n                <Typography variant={'body1'} paragraph={true}>{local.searchForVideos}</Typography>\n            </AppGrid>\n        );\n    }\n\n    return  (\n        <div>\n            <AppGrid>\n                <ButtonWithIcon\n                    disabled={props.isButtonDisabled}\n                    buttonType={props.buttonType}\n                    onClick={props.onButtonClick}\n                />\n            </AppGrid>\n            <AppGrid>\n                <Typography variant={'h6'} component={'h4'}>\n                    {showTextOrSkeleton(props.selectedVideo.title)}\n                </Typography>\n            </AppGrid>\n            <AppGrid>\n                <Typography variant={'body1'} paragraph={true}>\n                    {showTextOrSkeleton(props.selectedVideo.description)}\n                </Typography>\n            </AppGrid>\n            <AppGrid>\n                <Typography variant={'subtitle1'} component={'h4'}>\n                    {showTextOrSkeleton(props.selectedVideo.channel.name)}\n                </Typography>\n            </AppGrid>\n        </div>\n    );\n};\n","import React, {FC, useEffect} from \"react\";\nimport {presenters} from \"../../presenter/Presenters\";\nimport {usePresenter} from \"../../presenter/usePresenter\";\nimport {SearchAppBar} from \"../../components/AppBar/SearchAppBar\";\nimport {local} from \"../../localization/local\";\nimport {VideoPlayer} from \"../../components/VideoPlayer/VideoPlayer\";\nimport {AppContent} from \"../../components/AppContent\";\nimport {VideoPlayerOutput} from \"./VideoPlayerPresenter\";\nimport {ViewState} from \"./ViewState\";\nimport {VideoLoading} from \"../../components/VideoPlayer/VideoLoading\";\nimport {VideoFooter} from \"../../components/VideoFooter\";\n\ninterface Props {\n    className?: string;\n}\n// TODO: Add list of videos:\n//  Show all retrieved videos of the search to give user choice to select another video.\n\nexport const VideoPlayerScreen: FC<Props> = props => {\n    const {videoPlayerPresenter, snackBarPresenter} = presenters;\n    const state = usePresenter<VideoPlayerOutput>(videoPlayerPresenter);\n    const { selectedVideo, buttonType, isPlaying, viewState, searchString } = state;\n\n    useEffect(() => {\n        videoPlayerPresenter.showSnackBar(snackBarPresenter.show);\n    }, [viewState, videoPlayerPresenter, snackBarPresenter]);\n\n    const isLoading = () => viewState === ViewState.Loading;\n    const isEmpty = () => viewState === ViewState.Empty;\n\n    const handleButtonClick = () => {\n        videoPlayerPresenter.onPlayOrPauseClick();\n    }\n\n    const handleOnSearch = (str: string) => {\n        videoPlayerPresenter.searchVideos(str);\n    }\n\n    const videoPlayer = () => {\n        return isLoading()\n            ? <VideoLoading />\n            : <VideoPlayer videoId={selectedVideo.id} isPlaying={isPlaying} />;\n    };\n\n    return (\n        <div className={props.className}>\n            <SearchAppBar title={local.appTitle} onSearch={handleOnSearch} search={searchString} />\n            <AppContent>\n                {videoPlayer()}\n                <VideoFooter\n                    isLoading={isLoading()}\n                    isEmpty={isEmpty()}\n                    selectedVideo={selectedVideo}\n                    buttonType={buttonType}\n                    isButtonDisabled={viewState !== ViewState.Data}\n                    onButtonClick={handleButtonClick}\n                />\n            </AppContent>\n        </div>\n    );\n};\n","import React, {FC} from \"react\";\nimport {AppSnackBar} from \"../../components/AppSnackBar/AppSnackBar\";\nimport {presenters} from \"../../presenter/Presenters\";\nimport {usePresenter} from \"../../presenter/usePresenter\";\nimport {SnackBarOutput} from \"./SnackBarPresenter\";\n\nexport const SnackBarComponent: FC = () => {\n    const { snackBarPresenter } = presenters;\n    const state = usePresenter<SnackBarOutput>(snackBarPresenter);\n\n    return (\n        <AppSnackBar\n            isOpen={state.isOpen}\n            state={state.alertState}\n            message={state.message}\n            onClosePress={snackBarPresenter.hide}\n        />\n    );\n};\n","import React from 'react';\nimport {VideoPlayerScreen} from \"./screens/VideoPlayer/VideoPlayerScreen\";\nimport {SnackBarComponent} from \"./screens/SackBar/SnackBarComponent\";\n\nconst App = () => (\n    <>\n        <VideoPlayerScreen />\n        <SnackBarComponent />\n    </>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const getYoutubeDataAPIKey = (): string => {\n    console.log(process);\n\n    return process.env.REACT_APP_YOUTUBE_DATA_API_KEY ?? '';\n}\n\nexport interface NetworkingServiceConfiguration {\n    baseURL?: string;\n}\n\nexport class DevNetworkingServiceConfiguration implements NetworkingServiceConfiguration {\n    baseURL?: string;\n}\n\n// TODO: Add production configuration\n// class ProductionNetworkingServiceConfiguration\n\n"],"sourceRoot":""}